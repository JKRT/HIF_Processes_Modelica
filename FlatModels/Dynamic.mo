class TestThetaMethod_NonlinearCircuit_Test_ThetaCircuit2Dynamic
  parameter Real THETA = 1.0;
  Real ground_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real ground_p_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real stepCurrent_I(start = 1.0, unit = "A", quantity = "ElectricCurrent") = 1.0;
  Real stepCurrent_v(unit = "V", quantity = "ElectricPotential");
  Real stepCurrent_i(unit = "A", quantity = "ElectricCurrent");
  Real stepCurrent_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real stepCurrent_p_i(unit = "A", quantity = "ElectricCurrent");
  Real stepCurrent_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real stepCurrent_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real stepCurrent_offset(unit = "A", quantity = "ElectricCurrent") = 0.0;
  parameter Real stepCurrent_startTime(unit = "s", quantity = "Time") = 0.0;
  final parameter Real stepCurrent_signalSource_height = stepCurrent_I;
  output Real stepCurrent_signalSource_y;
  final parameter Real stepCurrent_signalSource_offset = stepCurrent_offset;
  final parameter Real stepCurrent_signalSource_startTime(unit = "s", quantity = "Time") = stepCurrent_startTime;
  Real C1_v(start = 0.0, unit = "V", quantity = "ElectricPotential");
  Real C1_i(unit = "A", quantity = "ElectricCurrent");
  Real C1_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real C1_p_i(unit = "A", quantity = "ElectricCurrent");
  Real C1_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real C1_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real C1_C(start = 1.0, min = 0.0, displayUnit = "uF", unit = "F", quantity = "Capacitance") = 0.0001000000000000001;
  parameter Real R1_R(start = 1.0, unit = "Ohm", quantity = "Resistance") = 1000.0;
  parameter Real R1_T_ref(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = 300.15;
  parameter Real R1_alpha(unit = "1/K", quantity = "LinearTemperatureCoefficient") = 0.0;
  Real R1_v(unit = "V", quantity = "ElectricPotential");
  Real R1_i(unit = "A", quantity = "ElectricCurrent");
  Real R1_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real R1_p_i(unit = "A", quantity = "ElectricCurrent");
  Real R1_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real R1_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Boolean R1_useHeatPort = false;
  parameter Real R1_T(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = R1_T_ref;
  Real R1_LossPower(unit = "W", quantity = "Power");
  Real R1_T_heatPort(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature");
  Real R1_R_actual(unit = "Ohm", quantity = "Resistance");
  Real D1_v(unit = "V", quantity = "ElectricPotential");
  Real D1_i(unit = "A", quantity = "ElectricCurrent");
  Real D1_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real D1_p_i(unit = "A", quantity = "ElectricCurrent");
  Real D1_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real D1_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real D1_Ids(unit = "A", quantity = "ElectricCurrent") = 1.0e-9;
  parameter Real D1_Vt(unit = "V", quantity = "ElectricPotential") = 0.04;
  parameter Real D1_Maxexp(min = 1.0e-60) = 40.0;
  parameter Real D1_R(unit = "Ohm", quantity = "Resistance") = 1.0e8;
  parameter Boolean D1_useHeatPort = false;
  parameter Real D1_T(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = 293.15;
  Real D1_LossPower(unit = "W", quantity = "Power");
  Real D1_T_heatPort(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature");
  Real D2_v(unit = "V", quantity = "ElectricPotential");
  Real D2_i(unit = "A", quantity = "ElectricCurrent");
  Real D2_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real D2_p_i(unit = "A", quantity = "ElectricCurrent");
  Real D2_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real D2_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real D2_Ids(unit = "A", quantity = "ElectricCurrent") = 1.0e-9;
  parameter Real D2_Vt(unit = "V", quantity = "ElectricPotential") = 0.04;
  parameter Real D2_Maxexp(min = 1.0e-60) = 40.0;
  parameter Real D2_R(unit = "Ohm", quantity = "Resistance") = 1.0e8;
  parameter Boolean D2_useHeatPort = false;
  parameter Real D2_T(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = 293.15;
  Real D2_LossPower(unit = "W", quantity = "Power");
  Real D2_T_heatPort(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature");
  Real D3_v(unit = "V", quantity = "ElectricPotential");
  Real D3_i(unit = "A", quantity = "ElectricCurrent");
  Real D3_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real D3_p_i(unit = "A", quantity = "ElectricCurrent");
  Real D3_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real D3_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real D3_Ids(unit = "A", quantity = "ElectricCurrent") = 1.0e-9;
  parameter Real D3_Vt(unit = "V", quantity = "ElectricPotential") = 0.04;
  parameter Real D3_Maxexp(min = 1.0e-60) = 40.0;
  parameter Real D3_R(unit = "Ohm", quantity = "Resistance") = 1.0e8;
  parameter Boolean D3_useHeatPort = false;
  parameter Real D3_T(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = 293.15;
  Real D3_LossPower(unit = "W", quantity = "Power");
  Real D3_T_heatPort(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature");
  Real diode_v(unit = "V", quantity = "ElectricPotential");
  Real diode_i(unit = "A", quantity = "ElectricCurrent");
  Real diode_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real diode_p_i(unit = "A", quantity = "ElectricCurrent");
  Real diode_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real diode_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real diode_Ids(unit = "A", quantity = "ElectricCurrent") = 1.0e-9;
  parameter Real diode_Vt(unit = "V", quantity = "ElectricPotential") = 0.04;
  parameter Real diode_Maxexp(min = 1.0e-60) = 40.0;
  parameter Real diode_R(unit = "Ohm", quantity = "Resistance") = 1.0e8;
  parameter Boolean diode_useHeatPort = false;
  parameter Real diode_T(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature") = 293.15;
  Real diode_LossPower(unit = "W", quantity = "Power");
  Real diode_T_heatPort(nominal = 300.0, start = 288.15, min = 0.0, displayUnit = "degC", unit = "K", quantity = "ThermodynamicTemperature");
  Real Cp_v(start = 0.0, unit = "V", quantity = "ElectricPotential");
  Real Cp_i(unit = "A", quantity = "ElectricCurrent");
  Real Cp_p_v(unit = "V", quantity = "ElectricPotential");
  flow Real Cp_p_i(unit = "A", quantity = "ElectricCurrent");
  Real Cp_n_v(unit = "V", quantity = "ElectricPotential");
  flow Real Cp_n_i(unit = "A", quantity = "ElectricCurrent");
  parameter Real Cp_C(start = 1.0, min = 0.0, displayUnit = "F", unit = "F", quantity = "Capacitance") = 1.0e-12 * THETA;
equation
  R1_n_v = ground_p_v;
  R1_n_v = Cp_n_v;
  R1_n_v = C1_n_v;
  R1_n_v = stepCurrent_p_v;
  diode_n_v = Cp_p_v;
  diode_n_v = R1_p_v;
  D1_p_v = stepCurrent_n_v;
  D1_p_v = C1_p_v;
  D1_p_v = D2_n_v;
  D3_p_v = D2_p_v;
  D3_p_v = D1_n_v;
  D3_n_v = diode_p_v;
  C1_p_i + stepCurrent_n_i + D1_p_i + D2_n_i = 0.0;
  D1_n_i + D2_p_i + D3_p_i = 0.0;
  diode_p_i + D3_n_i = 0.0;
  R1_p_i + diode_n_i + Cp_p_i = 0.0;
  R1_n_i + Cp_n_i + stepCurrent_p_i + C1_n_i + ground_p_i = 0.0;
  ground_p_v = 0.0;
  stepCurrent_signalSource_y = stepCurrent_signalSource_offset + (if time < stepCurrent_signalSource_startTime then 0.0 else stepCurrent_signalSource_height);
  stepCurrent_i = stepCurrent_signalSource_y;
  stepCurrent_v = stepCurrent_p_v - stepCurrent_n_v;
  0.0 = stepCurrent_p_i + stepCurrent_n_i;
  stepCurrent_i = stepCurrent_p_i;
  C1_i = C1_C * der(C1_v);
  C1_v = C1_p_v - C1_n_v;
  0.0 = C1_p_i + C1_n_i;
  C1_i = C1_p_i;
  assert(1.0 + R1_alpha * (R1_T_heatPort - R1_T_ref) >= 1.0e-15, "Temperature outside scope of model!", AssertionLevel.error);
  R1_R_actual = R1_R * (1.0 + R1_alpha * (R1_T_heatPort - R1_T_ref));
  R1_v = R1_R_actual * R1_i;
  R1_LossPower = R1_v * R1_i;
  R1_T_heatPort = R1_T;
  R1_v = R1_p_v - R1_n_v;
  0.0 = R1_p_i + R1_n_i;
  R1_i = R1_p_i;
  D1_i = smooth(1, D1_Ids * ((if D1_v / D1_Vt > D1_Maxexp then exp(D1_Maxexp) * (1.0 + D1_v / D1_Vt - D1_Maxexp) else exp(D1_v / D1_Vt)) - 1.0) + D1_v / D1_R);
  D1_LossPower = D1_v * D1_i;
  D1_T_heatPort = D1_T;
  D1_v = D1_p_v - D1_n_v;
  0.0 = D1_p_i + D1_n_i;
  D1_i = D1_p_i;
  D2_i = smooth(1, D2_Ids * ((if D2_v / D2_Vt > D2_Maxexp then exp(D2_Maxexp) * (1.0 + D2_v / D2_Vt - D2_Maxexp) else exp(D2_v / D2_Vt)) - 1.0) + D2_v / D2_R);
  D2_LossPower = D2_v * D2_i;
  D2_T_heatPort = D2_T;
  D2_v = D2_p_v - D2_n_v;
  0.0 = D2_p_i + D2_n_i;
  D2_i = D2_p_i;
  D3_i = smooth(1, D3_Ids * ((if D3_v / D3_Vt > D3_Maxexp then exp(D3_Maxexp) * (1.0 + D3_v / D3_Vt - D3_Maxexp) else exp(D3_v / D3_Vt)) - 1.0) + D3_v / D3_R);
  D3_LossPower = D3_v * D3_i;
  D3_T_heatPort = D3_T;
  D3_v = D3_p_v - D3_n_v;
  0.0 = D3_p_i + D3_n_i;
  D3_i = D3_p_i;
  diode_i = smooth(1, diode_Ids * ((if diode_v / diode_Vt > diode_Maxexp then exp(diode_Maxexp) * (1.0 + diode_v / diode_Vt - diode_Maxexp) else exp(diode_v / diode_Vt)) - 1.0) + diode_v / diode_R);
  diode_LossPower = diode_v * diode_i;
  diode_T_heatPort = diode_T;
  diode_v = diode_p_v - diode_n_v;
  0.0 = diode_p_i + diode_n_i;
  diode_i = diode_p_i;
  Cp_i = Cp_C * der(Cp_v);
  Cp_v = Cp_p_v - Cp_n_v;
  0.0 = Cp_p_i + Cp_n_i;
  Cp_i = Cp_p_i;
end TestThetaMethod_NonlinearCircuit_Test_ThetaCircuit2Dynamic;
